<ResourceDictionary xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="using:SiGen.UI.Controls"
		xmlns:materialIcons="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
					>

  <!--
    Additional resources 
    Using Control Themes:
         https://docs.avaloniaui.net/docs/basics/user-interface/styling/control-themes
    Using Theme Variants:
         https://docs.avaloniaui.net/docs/guides/styles-and-resources/how-to-use-theme-variants
  -->
  
  <Design.PreviewWith>
	  <ThemeVariantScope RequestedThemeVariant="Dark">
		  <StackPanel Width="400" Spacing="10" Background="{DynamicResource SystemRegionBrush}">
			  <StackPanel Background="{DynamicResource SystemRegionBrush}">
				  <controls:CustomFormField
					  Label="My control" Help="Click me" Info="Test" 
					  LabelWidth="150"
					  Orientation="Vertical"
					  InputHorizontalAlignment="Stretch"
					  LabelHorizontalAlignment="Center"
					  >
					  <controls:CustomFormField.Input>
						  <TextBox Text="test"  />
					  </controls:CustomFormField.Input>
				  </controls:CustomFormField>
			  </StackPanel>
		  </StackPanel>
	  </ThemeVariantScope>

  </Design.PreviewWith>
 
  <ControlTheme x:Key="{x:Type controls:CustomFormField}" TargetType="controls:CustomFormField">
    <Setter Property="Template">
      <ControlTemplate >
		  <DockPanel>

			  <Grid Name="PART_LabelContainer"
					HorizontalAlignment="{TemplateBinding LabelHorizontalAlignment}" 
					
					Margin="4"
					Width="{TemplateBinding LabelWidth}"
					>
				  <Grid.ColumnDefinitions>
					  <ColumnDefinition Width="*" />
					  <ColumnDefinition Width="Auto" />
				  </Grid.ColumnDefinitions>

				  <ContentPresenter Name="PART_LabelPresenter"
									DockPanel.Dock="Right"
									Content="{TemplateBinding Label}"
									VerticalAlignment="Center"
									HorizontalAlignment="{TemplateBinding LabelHorizontalAlignment}" 
									Margin="4,0,4,0"
									Grid.Column="0"
					/>

				  <Button Name="PART_HelpButton"
							Classes="HelpButton"
								  Grid.Column="1"
					  Width="20"
					  Height="20"
					  Padding="0"
					  Margin="4,0,0,0"
					  Background="Transparent"
					  BorderBrush="{DynamicResource SystemAccentColor}"
					  BorderThickness="1"
					  CornerRadius="10"
					  VerticalAlignment="Center"
					  IsVisible="{TemplateBinding Help, Converter={x:Static ObjectConverters.IsNotNull}}">
					  <TextBlock Text="?"
								FontSize="11"
								FontWeight="Bold"
								Foreground="{DynamicResource SystemAccentColor}"
								HorizontalAlignment="Center"
								VerticalAlignment="Center"
								 Margin="1,0,0,0"/>
					  <Button.Styles>
						  <Style Selector="Button:pointerover:not(:pressed) /template/ ContentPresenter">
							  <Setter Property="Background" Value="#55999999"/>
							  <Setter Property="BorderBrush" Value="{DynamicResource SystemAccentColor}"/>
						  </Style>
						  <Style Selector="Button:pressed /template/ ContentPresenter">

							  <Setter Property="BorderBrush" Value="{DynamicResource SystemAccentColor}"/>
						  </Style>
					  </Button.Styles>
				  </Button>
				  
			  </Grid>
			  <Grid Name="PART_InputContainer"
					HorizontalAlignment="{TemplateBinding InputHorizontalAlignment}"
					Margin="4">
				  <Grid.ColumnDefinitions>
					  <ColumnDefinition Width="*" />
					  <ColumnDefinition Width="Auto" />
				  </Grid.ColumnDefinitions>

				  <ContentPresenter Name="PART_InputPresenter"
							 Content="{TemplateBinding Input}"
							 VerticalAlignment="Center"
						  HorizontalAlignment="Stretch"
						  Grid.Column="0"
					  MinWidth="100"/>

				  <Button Name="PART_InfoButton"
						Classes="InfoButton"
									Grid.Column="1"
							Width="20"
					  Height="20"
					  Padding="0"
					  Margin="4,0,0,0"
					  Background="Transparent"
					  BorderBrush="{DynamicResource SystemAccentColor}"
					  BorderThickness="1"
					  CornerRadius="10"
					  VerticalAlignment="Center"
					  IsVisible="{TemplateBinding Info, Converter={x:Static ObjectConverters.IsNotNull}}">
					  <materialIcons:MaterialIcon
						  Kind="InformationSerifSymbol" FontSize="11"
						  Foreground="{DynamicResource SystemAccentColor}" />
					  <Button.Styles>
						  <Style Selector="Button:pointerover:not(:pressed) /template/ ContentPresenter">
							  <Setter Property="Background" Value="#55999999"/>
							  <Setter Property="BorderBrush" Value="{DynamicResource SystemAccentColor}"/>
						  </Style>
						  <Style Selector="Button:pressed /template/ ContentPresenter">

							  <Setter Property="BorderBrush" Value="{DynamicResource SystemAccentColor}"/>
						  </Style>
					  </Button.Styles>
				  </Button>
			  </Grid>
		  </DockPanel>
      </ControlTemplate>
    </Setter>

  </ControlTheme>
</ResourceDictionary>
